#+TITLE: Insect Bot Plan
#+AUTHOR: J. Bromley <jbromley@gmail.com>
#+DATE: February 13, 2012
#+TODO: TODO(t) IN_PROGRESS(i!) WAITING(w@/!) | DONE(d!) CANCELED(c@)

* Why?

 - Create an insect bot with some personality.
 - Use a variety of sensors.
   - light sensors
   - IR sensors
   - ultrasonic sensors
   - touch sensors
   - tilt switches
   - remote control
 - Use a variety of outputs
   - motors (obviously)
   - LED matrix
   - sound
 - Become familiar with sumbsumption architectures on Arduino/AVR.

* Outcome

The outcome for this project is an autonomous walking insect. It should be
able to avoid obstacles, either avoid or go towards light, avoid falling,
respond to sound, provide sound feedback, and be remote controlled.

* Ideas

 - When obstructed, scan for the longest free path before proceeding.
 - Add front feelers in case the bot gets to close to something for the
   ultrasonic sensor to work.
 - Add rear feelers to avoid crashing into walls while backing up.
 - Create a PCB with a bare-bones Arduino and necessary circuitry.
 - Add a third servo to pan the ultrasonic sensor left and right
 - Add a tilt switch and have the bot turn itself over if it is
   upside-down.
 - Add proximity sensors to the front legs so the bot doesn't go over
   ledges.
 - Add four photoresistors and have bot always go towards the brightest
   light. When there is no light gradient, stop.
 - Add a sound sensor and speed up briefly when there are loud sounds.
 - Add an IR receiver and use a remote control to control modes.
   * start/stop
   * light adverse vs. light seeking
   * simple control modes for directly controlling motion
 - Add logic to detect when the robot has not moved for some time due to
   an obstruction.
 - Add a Perspex or HDPE plastic shell to the back of the bot.
 - Add a piezo buzzer and emit sound to indicate events.
   * Beep a tone when obstructions are detected - higher note means
     smaller distance.
   * Beep when an IR command is received.
   * Add random chirps.
   * Beep warning tones when upside down.
   * Beep when stuck - i.e. when the robot cannot move.
 - Add a PIR sensor and move when approached.
 - Add an LED matrix "shield" that shows information about
   operation. The shield should be removable and pertinent code
   deactivated when the shield is not attached.
 - Use a LiPo battery with a charging circuit.

* Project Plan

** Walking
*** IN_PROGRESS Walk straight forward with less than 5% error.
    - State "IN_PROGRESS" from "TODO"       [2012-02-23 Thu 15:40]
*** TODO Walk straight backwards with less than 5% error.
*** TODO Turn right 90 degrees.
*** TODO Turn left 90 degrees.
*** TODO Turn right 90 degrees while moving backwards.
*** TODO Turn left 90 degrees while moving backwards.
*** TODO Test to see if the bot can be made to turn in-place.
** Ultrasonic sensor
*** TODO Mount ultrasonic sensor.
*** TODO Make connection cable for sensor.
*** TODO Add object-avoidance code.
*** TODO Find sensor with most accurate response.
** Light avoidance/seeking
*** TODO [#C] Test an analog subtraction circuit.
*** TODO [#C] A digital comparison circuit based on a comparator.
*** TODO Test simple two photoresistor set up.
Instead of trying to do this in hardware I have decided to do a first cut
using simply two photoresistors and two analog inputs. Build a test circuit
to see how well this works.
*** TODO Develop light-seeking/avoidance policy.
*** TODO Implement light-responsive behavior.
** Touch sensors
** Tilt sensor and self-righting
** Remote control
*** TODO Remote control test sketch.
*** TODO Implement mode switching in bot.
** Sound effects
*** TODO Develop mapping from actions to sound.
*** TODO Code in sound behaviors.
** PIR sensor
** Stuck detection
** Mechanical and electrical
*** TODO Make brackets for BBB Arduino
*** TODO Shrink wrap holding portion of brackets.
*** TODO Fix brackets to body.
*** TODO Circuit board for final circuitry.
I plan to use an Arduino Pro Mini on either a perfboard or a dedicated
etched PCB for the circuitry.
*** DONE Design power circuit.
    - State "DONE"       from "TODO"       [2012-02-24 Fri 16:48]
I am modeling my circuit after SparkFun's [[http://www.sparkfun.com/products/114][Breadboard power supply]]. I
should be able to eliminate the power jack and voltage-setting resistors
and use a 7805 instead of the LM317.

Further testing shows that the 2.5V dropout of the 7805 is not good for use
with a 9V battery. It would be better to use the L4931 LDO regulator. I will
have to check the current draw of the bot and solder an L4931 into the BBB.
*** TODO Measure current draw of the bot.
*** TODO Replace BBB 7805 with original L4931.
*** TODO Build power circuit
*** TODO Investigate isolating servos from microcontroller.
*** TODO Cut down servo cables to only length necessary to reach control board.
*** TODO Make the feet stickier.
Currently the feet do not grip at all, slipping even on carpet. I need to
find a way (hot glue? building feet?) to have the feet get better traction.
